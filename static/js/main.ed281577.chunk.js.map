{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","x","setX","maxIndex","length","useEffect","className","style","width","map","image","index","transform","transition","src","alt","type","onClick","currentIndex","Math","min","disabled","max","App","setItemWidth","setAnimationDuration","setFrameSize","setInfinite","setStep","htmlFor","id","value","onChange","e","Number","target","placeholder","name","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed281577.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth = 130,\n  frameSize = 3,\n  step = 1,\n  animationDuration = 300,\n  infinite = false,\n}) => {\n  const [x, setX] = useState(0);\n  const maxIndex = -(images.length - frameSize);\n\n  useEffect(() => {\n    // Проверка, чтобы не показывать пустое пространство\n    if (x < maxIndex) {\n      setX(maxIndex);\n    }\n  }, [frameSize]);\n\n  // button \"Next\"\n  const handleNext = () => {\n    const currentIndex = Math.max(x - step, maxIndex);\n\n    setX(infinite && currentIndex === maxIndex ? 0 : currentIndex);\n  };\n\n  // button \"Prev\"\n  const handlePrev = () => {\n    const currentIndex = Math.min(x + step, 0);\n\n    setX(infinite && currentIndex === 0 ? maxIndex : currentIndex);\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${frameSize * itemWidth}px`,\n      }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image, index) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={{\n              transform: `translateX(${x * itemWidth}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              width={itemWidth}\n              src={image}\n              alt={`${index + 1}`}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <button\n        type=\"button\"\n        onClick={handlePrev}\n        disabled={!infinite && x === 0}\n      >\n        Prev\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={handleNext}\n        disabled={!infinite && x === maxIndex}\n        data-cy=\"next\"\n      >\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface AppProps {\n  images?: string[];\n  itemWidth?: number;\n  frameSize?: number;\n  step?: number;\n  animationDuration?: number;\n  infinite?: boolean;\n}\n\nconst App: React.FC<AppProps> = () => {\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n\n  const [itemWidth, setItemWidth] = useState<number>(130);\n  const [animationDuration, setAnimationDuration] = useState<number>(1000);\n  const [frameSize, setFrameSize] = useState<number>(3);\n  const [infinite, setInfinite] = useState<boolean>(false);\n  const [step, setStep] = useState<number>(1);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        frameSize={frameSize}\n        infinite={infinite}\n        step={step}\n      />\n\n      <label htmlFor=\"itemId\">\n        Item width:\n        <input\n          type=\"number\"\n          id=\"itemId\"\n          value={itemWidth}\n          min={130}\n          max={1300}\n          step={10}\n          onChange={(e) => setItemWidth(Number(e.target.value))}\n          placeholder=\"Width of item\"\n        />\n      </label>\n\n      <label htmlFor=\"frameId\">\n        Number of images to display:\n        <input\n          type=\"number\"\n          id=\"frameId\"\n          value={frameSize}\n          min={1}\n          max={10}\n          step={1}\n          onChange={(e) => setFrameSize(Number(e.target.value))}\n          placeholder=\"Number of images to display\"\n        />\n      </label>\n\n      <label htmlFor=\"stepId\">\n        Number of images scrolled:\n        <input\n          type=\"number\"\n          id=\"stepId\"\n          name=\"step\"\n          min={1}\n          max={10}\n          step={1}\n          value={step}\n          onChange={(e) => setStep(Number(e.target.value))}\n        />\n      </label>\n\n      <label>\n        Animation Duration:\n        <input\n          type=\"number\"\n          value={animationDuration}\n          min={100}\n          max={10000}\n          step={100}\n          onChange={(e) => setAnimationDuration(Number(e.target.value))}\n          placeholder=\"Animation Duration\"\n        />\n      </label>\n\n      <label>\n        Carousel cyclic:\n        <input\n          type=\"checkbox\"\n          name=\"infinite\"\n          checked={infinite}\n          onChange={(e) => setInfinite(e.target.checked)}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}